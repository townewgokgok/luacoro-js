{"version":3,"sources":["node_modules/luacoro/dist/index.js","src/basic.ts","src/vector.ts","src/concurrent.ts","src/recursion.ts","src/inn.ts","src/index.ts"],"names":[],"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A,AEFA,CFEA,CEF4B,GAA5B,CEH2B,CFGY,GFEvC,EAAM,CILW,CJKT,AIL2B,EAAE,GAApB,CJKH,GIL8B,CAA5C,CJKM,CILyC,CJK1B,MAAM,EAArB,EAAN,CAAA;AEDE,AEHF,aFGO,CEHG,EAAE,EFGV,CEHF,EFGe,KAAb;AFA8B,AEC9B,AEHF,WAAO,EFGA,GAAL,GAAW,AEHb,GDNI,CDSa,CCTX,IDSO,ACTT,EDSF,ICTc,MAAZ,OAAA,CAAA,CAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AHSJ,AECC,AEHD,ADNE,gBCMU,GJEZ,CIFA,GJEA,AGRE,CAAA,CAAA,CAAA,SAAA,EAAM;AHSR,AEEC,AEJF,ADNW,CCAZ,UFUG,SAAA,CAAA,EFFD,CAAA,CAAA,AEEC,CFFD,EEEA,OFFA,EAAM,CEEC,CFFC,CEER,EAAiB,GFFH,MAAR,EAAgB,MAAM,EAAtB,EAAN,CAAA;AIAF,ADTI,ICSA,SAAJ,IDTI,EAAQ;AHSV,AICF,SAAA,UJDE,IAAA,CICF,GAAA;AJAE,AICA,ADXE,QCWI,IAAI,ODXR,ECWiB,EJDnB,AGVE,CHUF,CAAA,CAAA,CGVU,QHUV,AICU,CAAwB,CJD5B,EAAE,EICE,CAAV,GJDc,IAAR,EAAc,MAAM,EAApB,EAAN,CAAA;AIEA,ADXU,MCWR,KAAF,CAAQ,UAAR,GAAqB,SAAO,SAAP,GAAgB,IAAhB,GAAqB,SAArB,GAA8B,IAA9B,GAAmC,SAAnC,GAA4C,GAAjE;AJFA,AEEQ,AECT,ADXG,mBHQF,IAAA,AGRE,CAAA,CAAA,CAAA,KDUiB,GAAG,ECVpB,CDUiB,ACVjB,CDUwB,CCVjB,IDUsB,GAAZ,CAAX;AACA,AEEV,SAAA,OAAA,CAAkB,GAAlB,EAA6B,UFFP,SAAS,SAAT,EAAZ;AACA,AEER,ADZM,QCYA,IAAI,QDZA,CCYS,CDZP,GAAF,CAAM,KDUG,CCVG,ECYZ,CAAuB,ADZvB,CAAJ,ICYI,CFFmB,AEE7B,GFFmB,CAAc,gBAAd,CAAX;AACA,AEER,ADZqC,MCYnC,WAAF,GAAgB,GAAhB,QFFmB,KAAK,IAAL,CAAU,SAAS,IAAT,KAAkB,gBAA5B,CAAX;AFJT,AEKY,AEEX,ADZA,aCYS,UDZT,CDUe,ACVf,CDUW,ACVX,CAAA,CCYA,CAAwB,KAAxB,EAA+B,ADZ/B,EAAM,KAAK,CAAL,CAAN,CAAA,CCYA,CAA2C,ADZN,CCYrC;AJLF,AIMC,SJND,UAAA,CAAsB,WAAtB,EAA2C;AIQ3C,ADhBuC,ICgBnC,aAAJ;AAEA,ADjBE,ICiBE,UAAkB,IAAtB,CDjBE,IAAA,GDUkB,CCVmB,GDUf,WAAQ,OAAA,CAAA,CAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAC1B,AEQN,ADlBE,SCkBF,KAAA,GAAA,MDlBE,CAAA,CDUS,ACVT,CAAA,EDUI,GAAW,ICVf,CDUoB,CCVd,EDUS,CAAS,ECVb,CDUI,CAAa,ACVf,MAAF,CAAS,CDUL,ACVM,CDUjB,ICVsB,EAAN,GAAW,GAApB,CAAL,CAAN,CAAA,EAAqC;AHOrC,AEII,AEQJ,WAAO,QAAP,IJZA,CAAA,CAAA,CAAA,CEII,CAAA,CAAA,CAAA,KFJJ,EAAM,EAAE,AEIJ,CAAA,EAAM,GFJI,KAAR,EAAe,MAAM,EAArB,EAAN,CAAA;AIaA,ADpBA,gBCoBY,GDpBZ,CCoBA,GDpBA,IAAqC;AHOrC,AEII,AEUJ,ADpBA,cCoBU,IAAV,CJdA,IAAA,AEII,ACVJ,CAAA,CAAA,CAAA,CDUI,IAAM,ICVV,EAAM,KAAK,EAAE,MAAF,CAAS,KAAK,EAAL,GAAU,GAAnB,CAAL,CAAN,CAAA,EAAqC;AHOrC,AIcA,gBAAY,GAAZ,IJdA,CAAA,CAAA,CAAA,SAAA,EAAM,EAAE,MAAM,MAAR,EAAgB,MAAM,EAAtB,EAAN,CAAA;AIeA,ADtBA,mBAAA,IAAA,IAAqC;AHOrC,AECgC,AEehC,ADtBA,mBHMA,CIgBgB,CAAhB,EJhBA,AGNA,CAAA,CAAA,CAAA,SAAA,EAAM,KAAK,CAAL;AHON,AIgBA,ADtBA,aCsBS,UJhBT,CAAA,CAAA,CAAA,CIgBA,CAAwB,KAAxB,EJhBA,AIgB+B,EJhBzB,EAAE,KIgBR,CJhBc,EIgB6B,EAA3C,GJhBM,EAAiB,MAAM,EAAvB,EAAN,CAAA;AIkBA,ADzBA,QCyBI,OAAO,EDzBX,EAAqC,ICyBlB,MAAR,CAAe,KAAf,CAAX;AJlBA,AEIE,AEeF,QAAI,QAAQ,CAAZ,EJnBA,IAAA,EEIO,GAAL,GAAW,GAAG,KAAH,EAAX;AACA,AEgBF,AD5BA,aC4BA,MAAA,AD5BA,EHQI,CAAC,AIoBL,CD5BA,IDYE,ACZmC,CDYnC,CAAA,CAAA,KFJE,IEIF,CAAA,EFJE,AEII,CFJJ,CAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AACF,AIoBA,kBAAU,IAAV,CJpBA,CAAA,CAAA,CAAA,SAAA,EAAM,EAAN,CAAA;AEGA,AEmBA,YAAI,CAAJ,UFnBA,IAAA,IAAM;AFHN,AIuBA,YAAM,IAAI,GJvBV,IAAA,EIuBmB,cAAT,CAAwB,KAAxB,CAAV;AACA,AD/BH,UC+BK,SAAF,CAAY,MAAZ,CAAmB,YAAnB;AACA,AD9BJ,IAAI,UAAkB,EC8BV,ED9BZ,EC8BI;AFrBD,AEsBG,AD7BN,KDJG,ICIH,KAAA,GC6BW,AD7BX,SC6BM;AFpBH,AEqBK,AD7BN,QAAM,GDQL,ICRY,KDQZ,AEqBS,CFrBT,GCRqB,IDQrB,AEqBiB,EAAR,CFrBV,EEqBuB,EAAjB,EAAqB,CD7Bd,CAAwB,IDQrC,YCRa,CAAb;AC8BQ,AD5BR,QAAM,SAAS,KC4BL,ID5Bc,KC4BhB,CAAY,GAAZ,CAAgB,ID5BT,CAAwB,OC4B/B,WD5BO,CAAf;AHED,AI2BQ,AD5BP,WAAO,KAAP,GAAe,IAAf;AHGF,AI0BQ,AD5BN,SHEF,EGFS,MAAP,GAAgB,IAAhB,GHEF,GAAA;AEGI,AEyBE,AD5BJ,QAAM,MAAM,GC4BH,ID5BU,MDGjB,CAAA,AEyBE,CFzBF,CAAA,CCHU,CAAkB,IAAlB,CAAZ,EDGE,EAAM,KAAK,IAAL,CAAU,QAAV,CAAN,CAAA,EAA0B;AE0BtB,AD5BN,QAAI,SAAJ,GAAgB,SAAhB;ADEE,AE2BI,AD5BN,QAAI,QAAJ,CAAa,CAAb,EC4BU,AD5BM,CAAhB,EDCE,ACDiB,IDCjB,ACDF,EAAyB,EDCG,ECD5B,IC4B2B,CAArB,EAAwB;AJ7B9B,AEGE,AE2BM,AD3BR,QAAI,QAAQ,CAAZ,MHHA,CAAA,CAAA,CAAA,CEGE,AE2Ba,CF3Bb,CAAA,CAAA,KFHF,AI8BQ,EJ9BF,EEGJ,EAAM,KAAK,CFHb,CAAA,EAAiB,AEGT,CAAU,WAAV,CAAN,CAAA;AE4BK,AD3BP,aAAA,QAAA,CAAmB,IAAnB,EAAiC,EAAjC,EAA2C;AHJ3C,AEGE,AE6BI,AD3BJ,YAAI,OHLN,EGKE,EHLF,AEGE,IFHe,AEGf;AFFF,AEGE,AE8BE,AD5BF,YAAI,KC4BG,MJjCT,AGKE,CHLF,CAAA,CAAA,AGKoB,CDFlB,CAAA,CAAA,CAAA,AE8BE,KJjCJ,AGKE,EHLI,EEGJ,EAAM,KAAK,GFHb,CAAA,AEGQ,CAAU,UAAV,CAAN,CAAA;AE+BI,AD5BJ,YAAI,SAAJ,GAAgB,CAAhB,IC4BiB,CAAb;AJlCN,AEGE,AEgCI,AD5BJ,YAAI,MAAJ,CHPF,AGOa,CC4BH,GJnCV,AEGE,CCIgB,CAAhB,EDJA,ACImB,KAAK,CC4BH,AD5BrB,CC4BI,EAAoB;AJlC1B,AEGE,AEgCM,AD5BN,YAAI,MAAJ,CAAW,GAAG,CHPhB,AGOE,CHPF,CAAA,AGOmB,CHPnB,CEGE,CAAA,ACIoB,CDJpB,ACIA,CDJA,EEgCkB,CAAZ,EJnCR,EAAM,EEGJ,EAAM,KAAK,GFHb,CAAA,AEGQ,CAAU,OAAV,CAAN,CAAA;AEiCM,AD5BN,YAAI,MAAJ,SC4Ba,QAAP;AJpCR,AEGE,AEkCK,AD5BL,aAAK,MHTP,IAAA,AEGE,CCMA,GDNA,ACMmB,YAAU,KAAV,GAAe,gBAAf,GAAgC,KAAK,KAAL,CAAW,GAAG,CAAd,CAAhC,GAAgD,IAAhD,GAAqD,KAAK,KAAL,CAAW,GAAG,CAAd,CAArD,GAAqE,GAAxF;AHRF,AIqCM,AD5BJ,uBHTF,CAAA,CAAA,CAAA,SAAA,EAAM,YAAN,CAAA;AIsCM,AD5BL;AHVD,AIwCI,AD5BJ,QAAI,MAAM,GC4BD,CD5BK,CHZd,IAAA,IGYc,EC4BV,KD5BM,CAAW,CAAX,EAAc,OAAO,EAArB,CAAV;AHXA,AEEC,AEsCK,AD5BN,KDfC,GCeK,MAAM,IAAI,KHZhB,CAAA,CAAA,CAAA,CGYgB,EC4BG,CAAb,ID5BM,CHZZ,AGYuB,EHZjB,EGYM,EAAiB,CAAjB,CAAZ,IHZA,CAAA;AEIC,AEqCK,AD5BN,QAAM,GDTL,ICSY,KDTZ,AEqCS,CFrCT,ECSoB,IC4BJ,ED5BJ,CAAe,GDT3B,ECSgC,CDTjC,AEqCM,EAAsB,AD5BA,CAAf,CAAb,QDTA;AFJA,AI0CQ,AD3BR,aAAA,MHfA,AGeA,GAAA,CHfA,SI0CoB,GAAZ;AJzCR,AI0CQ,AD3BN,kBAAU,IAAV,CHfF,CAAA,CAAA,CAAA,CI0Ce,QJ1Cf,AI0CQ,EJ1CF,WAAW,IAAX,CAAN,CAAA;AI2CO,AD1BL,YAAM,IAAI,KAAK,MAAL,EAAV;AHjBF,AEIE,AEwCI,AD1BJ,YAAI,CAAJ,EAAO,IHlBT,IAAA,IEIE,CAAA,CAAA,CAAA,SAAA,EAAM,KAAK,IAAL,CAAU,WAAV,CAAN,CAAA;AFHF,AI4CM,AD1BF,qBAAS,EHlBb,CAAA,AGkBI,CHlBJ,CAAA,AGkBkB,IAAI,GAAJ,CAAQ,CHlB1B,AGkBkB,CAAd,CHlBE,EAAE,MAAM,MAAR,EAAgB,MAAM,EAAtB,EAAN,CAAA;AEGE,AE2CE,AD3BA,kBAAM,IAAI,CDhBZ,ECgBQ,CAAQ,CDhBhB,ACgBQ,CAAN;AHnBJ,AEIE,AE2CI,AD3BH,mBHpBH,CI+CU,GJ/CV,EI+Ce,EF3Cb,CAAA,CAAA,CAAA,CE2CQ,EAAJ,MF3CJ,EAAM,KAAK,IAAL,CAAU,OAAV,CAAN,CAAA;AFHF,AI+CM,AD3BJ,YAAI,KAAK,GC2BD,CAAJ,EJ/CN,AI+Ca,CJ/Cb,AGoBE,CHpBF,CAAA,AGoBoB,IC2BA,CAAP,IJ/Cb,EAAM,EAAE,MAAM,SAAR,EAAmB,MAAM,EAAzB,EAAN,CAAA;AEGE,AEUA,ADQE,sBAAU,CDlBZ,IAAA,iBCkBkC,MAAtB,CAAV;AHrBJ,AIiDE,AD3BC,mBHtBH,IAAA;AACA,AIiDE,AD3BD,YC2BK,KAAK,MJjDX,CAAA,AIiDE,CJjDF,CAAA,AIiDoB,SJjDpB,EAAM,EAAE,MAAM,MAAR,EAAgB,MAAM,EAAtB,EAAN,CAAA;AIkDI,AD1BJ,cAAU,QC0BI,cD1BkB,MAAtB,CAAV,CC0BoC,MAAtB,CAAV;AJlDJ,AEGC,AEgDE,AD1BJ,KDzBE,cFAD,IAAA;AACA,AEIA,AE+CC,ADpEH,QAAA,GDqBE,ECrBF,GAAA,IDqBE,CAAA,ACrBF,EHiBE,CAAA,CAAA,CAAA,EEIA,GAAA,IFJA,EAAM,EAAE,EEIC,GAAT,CFJc,CEIwB,OFJhC,EAAkB,MAAM,EAAxB,EAAN,CAAA;AEKE,AEgDF,AD3BF,SAAA,GDrBQ,CCqBR,CC2BY,ED3BZ,KDrBI,GAAgB,KAAK,KAArB,EEgD8B,MAAtB,CAAV;AJrDA,AEME,AEgDH,AD3BC,QAAI,IDrBE,GCqBN,EAAa,EH3Bb,CEME,CAAa,EFNf,GEMoB,GAAL,CAAS,CAAT,GAAa,CAA1B,EAA6B,CCqBG,IDrBE,GAAL,ACqBlB,CDrB2B,CAAT,GAAa,CAA1C,EAA6C,EAA7C,EAAiD,EAAjD;AFLF,AEMC,AEdH,ADmCE,KDxBA,GEXF,KAAA,CDmCY,ECnCZ,EDmCE,GCnCF,EJQE,CAAA,CAAA,CAAA,SAAA,EAAM,EAAE,MAAM,KAAR,EAAe,MAAM,EAArB,EAAN,CAAA;AEOF,AEgDA,AD3BC,SC2BD,EFhDA,EEgDA,GAAA,CFhDA;AFPE,AE/BF,AEuFE,AD/BF,CDxDA,EAAA,KEuFM,AD/BN,IAAA,GC+BE,AD/BF,EC+Be,EJxDb,AGyBF,IHzBE,eIwDkC,OAArB;AJvDb,AEQF,AEgDE,IFhDE,UAAkB,AEgDV,IFhDZ,AEgDE,KJxDA,CAAA,CAAA,CAAA,SAAA,EAAM,EAAE,MAAM,OAAR,EAAiB,MAAM,EAAvB,EAAN,CAAA;AEUF,AE+CC,SF/CD,KAAA,GAAA;AFVE,AEWA,AE2CF,QF3CQ,AE2CR,IAAA,GAAA,EF3CiB,EFXf,AIsDF,IJtDE,GEWwB,cAAT,CAAwB,mBAAxB,CAAf;AACA,AE+CF,WF/CS,KAAP,GAAe,IAAf;AACA,AE+CF,WF/CS,MAAP,GAAgB,IAAhB;AAEA,AE+CF,QF/CQ,CE+CR,OAAA,CAAmB,GF/CC,CE+CpB,EAAkC,CF/CV,MAAJ,CAAW,KAAX,EAAkB,OAAlB,CAAlB;AFdD,AEeC,QAAM,aAAa,IAAI,MAAJ,CAAW,MAAX,EAAmB,OAAnB,CAAnB;AFbF,AEeE,IFfE,SEeF,CFfoB,IAAtB,EEeE,GAAA;AFbF,AEcI,SFdJ,GEcU,EFdV,GAAA,CEcgB,OAAO,UAAP,CAAkB,IAAlB,CAAZ;AFbF,AEcE,AE2CF,QJzDM,IEcA,OFdW,EEcf,GAAgB,IFdQ,AIyDd,IAAZ,CF3CE,SFde,CAAwB,gBAAxB,CAAjB;AACA,AEcE,AE2CF,YF3CM,CFdG,OEcP,CAAa,CAAb,CE2CF,CJzDA,AEckB,AE2ClB,CF3CE,AE2CF,CAAA,CJzDuB,AEcF,EFdrB,EEcE,EAAyB,EE2C3B,EF3CE,AE2CI,SAAN,CAAA;AJvDA,AEaE,QFbI,OAAO,GEaD,KFbS,EEanB,CAAkB,GFbP,AEaX,CFb0B,oBAAf,CAAb;AAEA,AEYE,AEyCF,aJrDA,MAAA,AEYa,AEyCb,GJrDA,CIqDA,GFzCE,CAAmB,GAAnB;AFXA,AEYD,AEyCD,YJrDQ,IAAI,KAAK,EIqDjB,CAAA,CAAA,CAAA,CJrDY,EAAV,OIqDF,EAAO,OAAP,CAAA;AJpDE,AEaF,QAAM,IFbA,GEaO,EFbF,EAAE,IAAX,AEamB,EFbF,CEaN,CAAY,CACvB,QAAQ,OAAR,CAAgB,UAAU,OAAV,CAAkB,IAAlB,CAAuB,SAAvB,CAAhB,CADuB,EAEvB,QAAQ,OAAR,CAAgB,WAAW,YAAX,CAAwB,IAAxB,CAA6B,UAA7B,CAAhB,CAFuB,CAAZ,CAAb;AFZI,AEiBJ,aAAA,MAAA,EFjBa,CEiBb,UFjBI,IAAwB,EAAE,IAA1B;AACD,AEiBD,AEkCH,aFlCQ,MAAL;AFhBA,AEiBA,AEmCJ,SAAA,GJpDQ,KAAK,CIoDb,CAAqB,CAArB,EAA8B,EJpD1B,EAAkB;AAChB,AEiBF,kBAAU,IFjBE,kBEiBoB,IFjBE,EEiBxB,CAAV,GFjBY,CAAV;AACD,AEiBF;AFhBA,AEkBD,cAAU,sBAAsB,MAAtB,CAAV;AFhBA,AEiBD,AE+BC,cJhDU,kBIgDM,CAAhB,GJhDgC,MAAtB,CAAV;AACD,AEZD,AE4DE,QF5DF,KAAA,GAAA,KAAA,EE4DE,CAAA,CAAA,CAAA,SAAA,EAAM,WAAN,CAAA;AJjEF,AEmCA,QFnCA,CEmCA,IFnCA,AEmCA,GFnCA,AEmCA,KFnCA;AAmBA,AEiBE,AE6BA,QF7BI,CFjBN,IAAA,EEiBE,CFjBF,CEiBe,EE6Bb,IAAA,eF7BkC,OAArB;AFhBb,AEiBA,QFjBI,MEiBM,CFjBV,EAAa,CEiBb,oBFjBkC,OAArB;AACb,AEiBD,cFjBW,IAAV;AACD,AEaD,QAAA,IAAA,GAAA,IAAA;AFhBA,AI+CC,QJ/CD,IAAA,GAAA,IAAA;AIiDA,SAAA,WAAA,GAAA;;;;AACE,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,aAAN,CAAA;;AAAA,mBAAA,IAAA;;;;AACD;AAED,SAAA,UAAA,GAAA;;;;AACE,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,YAAN,CAAA;;AAAA,mBAAA,IAAA;;;;AACD;AAED;AACA;AAEA,SAAA,GAAA,GAAA;;;;;AACE,wBAAQ,iCAAR;AACA,wBAAQ,qCAAR;AACA,wBAAQ,8BAAR;AACY,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,QAAQ,CAAC,GAAD,EAAM,GAAN,CAAR,CAAN,CAAA;;AAAN,sBAAM,GAAA,IAAA,EAAN;sBAEF,QAAQ,MAAR,OAAA,CAAA,CAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AACF,wBAAQ,aAAR;AACA,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,UAAU,EAAV,CAAN,CAAA;;AAAA,mBAAA,IAAA;AACA,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,aAAN,CAAA;;AAAA,mBAAA,IAAA;AACA,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,UAAU,EAAV;AACN;AACA;AACA;AAHA,iBAAA;;AAAA,mBAAA,IAAA;AACA;AACA;AACA;AACA,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,YAAN,CAAA;;AAHA;AACA;AACA;AACA,mBAAA,IAAA;AACA,wBAAQ,eAAR;AACA,wBAAQ,6CAAR;AACA,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,SAAN,CAAA;;AAAA,mBAAA,IAAA;;;AAGF,wBAAQ,yBAAR;AACA,uBAAA,CAAA,CAAA,CAAA,SAAA,EAAM,SAAN,CAAA;;AAAA,mBAAA,IAAA;;;;AACD","file":"src.3e2b5666.map","sourcesContent":["\"use strict\";\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Check if the value is an iterator.\n *\n * @param v The value to check\n */\nfunction isIterator(v) {\n    if (v == null || typeof v !== 'object') {\n        return false;\n    }\n    return 'next' in v && typeof v.next === 'function';\n}\n/**\n * The Lua-like pseudo-coroutine that wraps iterators.\n */\nvar Coroutine = /** @class */ (function () {\n    /**\n     * Create a new coroutine to iterate `start` first.\n     * Read `create<T>` for details.\n     *\n     * @param start Iterator to be started to iterate first\n     */\n    function Coroutine(start) {\n        this.waitingFrames = 0;\n        this.iteratorStack = [];\n        if (start) {\n            this.iteratorStack.push(start);\n        }\n    }\n    Object.defineProperty(Coroutine.prototype, \"isAlive\", {\n        /**\n         * Whether this coroutine is alive.\n         */\n        get: function () {\n            return 0 < this.iteratorStack.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Stop this coroutine.\n     */\n    Coroutine.prototype.stop = function () {\n        this.iteratorStack = [];\n    };\n    /**\n     * Resume the current iterator and receive the yielded value at the next frame.\n     * This method will return nulls forever after the coroutine stops.\n     *\n     * @returns The value at the next frame\n     */\n    Coroutine.prototype.resume = function (resumeValue) {\n        var result = null;\n        if (--this.waitingFrames < 1) {\n            if (this.iteratorStack.length === 0) {\n                return null;\n            }\n            var wait = 1; // will be set waitingFrames\n            while (0 < this.iteratorStack.length) {\n                // get the next value `yield`ed from the current iterator\n                var iter = this.iteratorStack[this.iteratorStack.length - 1];\n                var r = iter.next(resumeValue);\n                resumeValue = undefined;\n                if (r.done) {\n                    this.iteratorStack.pop();\n                }\n                var y = r.value;\n                if (typeof y === 'undefined') {\n                    if (r.done) {\n                        // bare `return` (continue the caller iterator on the stack top)\n                        continue;\n                    }\n                    // bare `yield` (wait 1 frame)\n                    y = null;\n                }\n                if (isIterator(y)) {\n                    // pause and save the current iterator and start the `yield`ed iterator\n                    var iter_1 = y;\n                    this.iteratorStack.push(iter_1);\n                    continue;\n                }\n                else if (typeof y === 'number') {\n                    // wait `y` frames\n                    wait = y;\n                    break;\n                }\n                else {\n                    // `y` is a value of `T`\n                    if (r.done && 0 < this.iteratorStack.length) {\n                        // y is `return`ed from the current iterator so it has been stopped,\n                        // and y is to be the value of `yield` expression in the caller iterator\n                        resumeValue = y;\n                        continue;\n                    }\n                    // y is the `resume()` value of the current frame\n                    result = y;\n                    wait = 1;\n                    if (result && typeof result.wait === 'number') {\n                        wait = result.wait;\n                    }\n                    break;\n                }\n            }\n            this.waitingFrames = Math.ceil(wait);\n        }\n        return result;\n    };\n    return Coroutine;\n}());\nexports.Coroutine = Coroutine;\n/**\n * Create a new coroutine to iterate `start` first.\n *\n * `start` normally must be an iterator generated by a generator\n * implemented to `yield` (or `return`) values of the following 3 types:\n *\n * - `o`: An object of an arbitary class\n *   - `resume()` returns `o`.\n *   - If `o` has a `wait` field, `resume()` returns `null` through `o.wait - 1` frames after that.\n *     The iterator is not resumed while this, which means that\n *     this coroutine waits `n` frames including the current frame.\n *   - In principle, values of this type must be `yield`ed.\n *     If a value of this type is `return`ed, the coroutine will be stopped.\n *\n * - `n`: A number\n *   - `resume()` returns `null`.\n *   - After that, `resume()` returns `null` through `n - 1` frames.\n *     The iterator is not resumed while this, which means that\n *     this coroutine waits `n` frames including the current frame.\n *\n * - `i`: An iterator of the same type as `start`\n *   - When `i` is `return`ed, the current iterator is terminated\n *     and `i` is immediately started to iterate as the replacement.\n *   - When `i` is `yield`ed, the current iterator is paused and pushed onto the stack,\n *     and `i` is immediately started to iterate.\n *     After `i` is terminated, the caller iterator is popped from the stack and continued.\n *\n * @param start Iterator to be started to iterate first\n */\nfunction create(start) {\n    if (start instanceof Coroutine) {\n        return start;\n    }\n    if (isIterator(start)) {\n        return new Coroutine(start);\n    }\n    return new Coroutine(start());\n}\nexports.create = create;\n/**\n * Create a new coroutine to iterate all `coroutines`\n * concurrently until the all of them are dead.\n *\n * @param coroutines Coroutines or iterators\n * @returns Composed coroutine\n */\nfunction all(coroutines) {\n    return new Coroutine(function (coroutines) {\n        var isAlive, result, _i, coroutines_1, coro;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    isAlive = false;\n                    result = [];\n                    for (_i = 0, coroutines_1 = coroutines; _i < coroutines_1.length; _i++) {\n                        coro = coroutines_1[_i];\n                        result.push(coro.resume());\n                        if (coro.isAlive) {\n                            isAlive = true;\n                        }\n                    }\n                    if (!isAlive) {\n                        return [2 /*return*/, result];\n                    }\n                    return [4 /*yield*/, result];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    }(coroutines.map(function (c) { return create(c); })));\n}\nexports.all = all;\n/**\n * Create a new coroutine to iterate all `coroutines`\n * concurrently until one of them is dead.\n *\n * @param coroutines Coroutines or iterators\n * @returns Composed coroutine\n */\nfunction race(coroutines) {\n    return new Coroutine(function (coros) {\n        var isAlive, result, _i, coros_1, coro;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    isAlive = true;\n                    result = [];\n                    for (_i = 0, coros_1 = coros; _i < coros_1.length; _i++) {\n                        coro = coros_1[_i];\n                        result.push(coro.resume());\n                        if (!coro.isAlive) {\n                            isAlive = false;\n                        }\n                    }\n                    if (!isAlive) {\n                        return [2 /*return*/, result];\n                    }\n                    return [4 /*yield*/, result];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    }(coroutines.map(function (c) { return create(c); })));\n}\nexports.race = race;\n/**\n * Create a new coroutine that repeats\n * generating iterator and iterating it forever.\n *\n * @param generator Generator (instance methods must be `bind`ed, be careful)\n * @returns Composed coroutine\n */\nfunction forever(generator) {\n    return new Coroutine(function () {\n        var coro, isNew, v;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    isNew = false;\n                    if (!(coro && coro.isAlive)) {\n                        coro = new Coroutine(generator());\n                        isNew = true;\n                    }\n                    v = coro.resume();\n                    if (!coro.isAlive && v == null && !isNew) {\n                        return [3 /*break*/, 0];\n                    }\n                    return [4 /*yield*/, v];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    }());\n}\nexports.forever = forever;\n//# sourceMappingURL=index.js.map","import * as luacoro from 'luacoro'\n\nconst bpm = 160 // tempo\nconst n8 = Math.round(60 * 60 / bpm / 2) // frame count of 8th note\nconst n4 = n8 * 2\nconst n4d = n8 * 3\nconst n1 = n8 * 8\n\ninterface MessageFrame {\n  text: string\n  wait: number\n}\n\nfunction* maryHadA (): luacoro.Iterator<MessageFrame> {\n  yield { text: 'Ma', wait: n4d } // `resume()` returns this value and\n                                  // wait `n4d` frames with suspending here\n  yield { text: 'ry ', wait: n8 }\n  yield { text: 'had ', wait: n4 }\n  yield { text: 'a ', wait: n4 }\n}\n\nfunction* littleLamb (withoutRest?: boolean): luacoro.Iterator<MessageFrame> {\n  yield { text: 'lit', wait: n4 }\n  yield { text: 'tle ', wait: n4 }\n  yield { text: 'lamb ', wait: n4 }\n  if (!withoutRest) {\n    yield n4\n  }\n}\n\nfunction* maryHadALittleLamb (): luacoro.Iterator<MessageFrame> {\n  yield maryHadA() // To go to another iterator and come back, just yield it\n  yield littleLamb()\n  yield littleLamb()\n  yield littleLamb()\n  yield maryHadA()\n  yield littleLamb(true)\n  yield { text: 'its ', wait: n4 }\n  yield { text: 'fleece ', wait: n4 }\n  yield { text: 'was ', wait: n4 }\n  yield { text: 'white ', wait: n4 }\n  yield { text: 'as ', wait: n4 }\n  yield { text: 'snow ', wait: n1 }\n}\n\nlet request: number = null\n\nexport function start () {\n  const textarea = document.getElementById('basic-textarea') as HTMLTextAreaElement\n  textarea.textContent = ''\n\n  const coro = luacoro.create(maryHadALittleLamb())\n\n  function update () {\n    const v = coro.resume()\n    if (v && v.text) {\n      textarea.textContent += v.text\n    }\n    if (coro.isAlive) {\n      request = requestAnimationFrame(update)\n    }\n  }\n\n  request = requestAnimationFrame(update)\n}\n\nexport function stop () {\n  if (request) cancelAnimationFrame(request)\n  request = null\n}\n","export default class Vector {\n  x: number\n  y: number\n\n  constructor (x: number = .0, y: number = .0) {\n    this.x = x\n    this.y = y\n  }\n\n  clone (): Vector {\n    return new Vector(this.x, this.y)\n  }\n\n  size (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  add (v: Vector): Vector {\n    return new Vector(this.x + v.x, this.y + v.y)\n  }\n\n  sub (v: Vector): Vector {\n    return new Vector(this.x - v.x, this.y - v.y)\n  }\n\n  mul (r: number): Vector {\n    return new Vector(this.x * r, this.y * r)\n  }\n\n  div (r: number): Vector {\n    return new Vector(this.x / r, this.y / r)\n  }\n\n  normalize (): Vector {\n    return this.div(this.size())\n  }\n\n  rotate (rad: number): Vector {\n    const c = Math.cos(rad)\n    const s = Math.sin(rad)\n    return new Vector(\n      this.x * c - this.y * s,\n      this.x * s + this.y * c\n    )\n  }\n}\n","import * as luacoro from 'luacoro'\nimport Vector from './vector'\n\nconst size = 300\nconst topLeft = new Vector(size * .3, size * .3)\nconst topRight = new Vector(size * .7, size * .3)\nconst bottomRight = new Vector(size * .7, size * .7)\nconst bottomLeft = new Vector(size * .3, size * .7)\nconst absoluteVelocity = 3\n\nclass Sprite {\n  style: string\n  pos: Vector\n\n  constructor (style: string, pos: Vector) {\n    this.style = style\n    this.pos = pos.clone()\n  }\n\n  *move (to: Vector): luacoro.Iterator<{}> {\n    const distance = to.sub(this.pos)\n    const direction = distance.normalize()\n    const velocity = direction.mul(absoluteVelocity)\n    const division = Math.ceil(distance.size() / absoluteVelocity)\n    for (let i = 1; i < division; i++) {\n      this.pos = this.pos.add(velocity)\n      yield // wait 1 frame\n    }\n    this.pos = to.clone()\n    yield // wait 1 frame\n  }\n\n  *goRound (): luacoro.Iterator<{}> {\n    yield this.move(topRight) // To go to another iterator and come back, just yield it\n    yield this.move(bottomRight)\n    yield this.move(bottomLeft)\n    yield this.move(topLeft)\n  }\n\n  *backAndForth (): luacoro.Iterator<{}> {\n    yield this.move(bottomRight)\n    yield this.move(topLeft)\n  }\n\n  repaint (ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = this.style\n    ctx.fillRect(this.pos.x - 8, this.pos.y - 8, 16, 16)\n  }\n}\n\nlet request: number = null\n\nexport function start () {\n  const canvas = document.getElementById('concurrent-canvas') as HTMLCanvasElement\n  canvas.width = size\n  canvas.height = size\n\n  const redSprite = new Sprite('red', topLeft)\n  const blueSprite = new Sprite('blue', topLeft)\n\n  function repaint () {\n    const ctx = canvas.getContext('2d')\n    ctx.fillStyle = '#eeeeee'\n    ctx.fillRect(0, 0, size, size)\n    redSprite.repaint(ctx)\n    blueSprite.repaint(ctx)\n  }\n\n  const coro = luacoro.all([\n    luacoro.forever(redSprite.goRound.bind(redSprite)),\n    luacoro.forever(blueSprite.backAndForth.bind(blueSprite))\n  ])\n\n  function update () {\n    coro.resume()\n    repaint()\n    request = requestAnimationFrame(update)\n  }\n\n  request = requestAnimationFrame(update)\n}\n\nexport function stop () {\n  if (request) cancelAnimationFrame(request)\n  request = null\n}\n","import * as luacoro from 'luacoro'\nimport Vector from './vector'\n\nconst eps = 2.0\nconst size = 300\n\nfunction* koch (v: Vector): luacoro.Iterator<Vector> {\n  if (v.size() <= eps) {\n    yield v // resume() returns v and wait 1 frame\n            // (different from `return v`, be careful)\n    return // back to the caller iterator (with no return value)\n  }\n  const t = v.mul(1.0 / 3.0)\n                                       // ＿/\\＿\n  yield koch(t)                        // ＿\n  yield koch(t.rotate(-Math.PI / 3.0)) //   /\n  yield koch(t.rotate(Math.PI / 3.0))  //    \\\n  yield koch(t)                        //     ＿\n  // back to the caller iterator (with no return value)\n}\n\nlet request: number = null\n\nexport function start () {\n  const info = document.getElementById('recursion-info') as HTMLDivElement\n\n  const canvas = document.getElementById('recursion-canvas') as HTMLCanvasElement\n  canvas.width = size\n  canvas.height = size\n\n  const ctx = canvas.getContext('2d')\n  ctx.fillStyle = '#eeeeee'\n  ctx.fillRect(0, 0, size, size)\n\n  let frame = 0\n  function drawLine (from: Vector, to: Vector) {\n    ctx.beginPath()\n    ctx.strokeStyle = '#000000'\n    ctx.lineWidth = 1\n    ctx.moveTo(from.x, from.y)\n    ctx.lineTo(to.x, to.y)\n    ctx.stroke()\n    info.textContent = `frame: ${frame} / position: (${Math.round(to.x)}, ${Math.round(to.y)})`\n    frame++\n  }\n\n  let pos = new Vector(0, size * .8)\n  const vec = new Vector(size, 0)\n  const coro = luacoro.create(koch(vec))\n\n  function update () {\n    request = null\n\n    const v = coro.resume()\n    if (v) {\n      drawLine(pos, pos.add(v))\n      pos = pos.add(v)\n    }\n    if (coro.isAlive) {\n      request = requestAnimationFrame(update)\n    }\n  }\n\n  request = requestAnimationFrame(update)\n}\n\nexport function stop () {\n  if (request) cancelAnimationFrame(request)\n  request = null\n}\n","import * as luacoro from 'luacoro'\n\n///////////////////////////////////////////////////////////////////////////\n// Main game system and API implementations\n\nlet mode: string\n\nlet limitKeys: string[]\nlet lastKey: string\nwindow.addEventListener('keydown', (e: KeyboardEvent) => {\n  if (mode !== 'waitKey') return\n  if (limitKeys && limitKeys.indexOf(e.key) < 0) return\n  lastKey = e.key\n  mode = 'normal'\n  limitKeys = null\n})\n\nlet luminance: number\nfunction updateLuminance () {\n  const e = document.getElementById('inn')\n  e.style.background = `rgb(${luminance}, ${luminance}, ${luminance})`\n}\n\nfunction message (msg: string) {\n  const e = document.createElement('div') as HTMLDivElement\n  e.textContent = msg\n  document.getElementById('inn').appendChild(e)\n}\n\nlet waitingFrames: number\n\nlet request: number = null\n\nexport function start () {\n  mode = 'normal'\n  limitKeys = null\n  lastKey = null\n  luminance = 255\n  updateLuminance()\n  waitingFrames = 0\n  document.getElementById('inn').innerHTML = ''\n\n  let coro = luacoro.create(inn())\n  let frame = 0\n\n  function update () {\n    request = null\n\n    let r\n    const e = document.getElementById('inn')\n    e.classList.remove('showCursor')\n    switch (mode) {\n      case 'waitKey':\n        if (frame % 60 < 30) {\n          e.classList.add('showCursor')\n        }\n        break\n\n      case 'waitFrame':\n        waitingFrames--\n        if (waitingFrames <= 0) {\n          mode = 'normal'\n        }\n        break\n\n      case 'waitFadeOut':\n        luminance -= 5\n        if (luminance <= 0) {\n          luminance = 0\n          mode = 'normal'\n        }\n        updateLuminance()\n        break\n\n      case 'waitFadeIn':\n        luminance += 5\n        if (255 <= luminance) {\n          luminance = 255\n          mode = 'normal'\n        }\n        updateLuminance()\n        break\n\n      default:\n        r = coro.resume()\n        if (r) mode = r\n    }\n    frame++\n    if (coro.isAlive) {\n      request = requestAnimationFrame(update)\n    }\n  }\n\n  request = requestAnimationFrame(update)\n}\n\nexport function stop () {\n  if (request) cancelAnimationFrame(request)\n  request = null\n}\n\n///////////////////////////////////////////////////////////////////////////\n// Helpers\n\nfunction* waitKey (keys?: string[]): luacoro.Iterator<string> {\n  limitKeys = keys\n  yield 'waitKey'\n  return lastKey\n}\n\nfunction* waitFrame (f: number): luacoro.Iterator<string> {\n  waitingFrames = f\n  yield 'waitFrame'\n}\n\nfunction* waitFadeOut (): luacoro.Iterator<string> {\n  yield 'waitFadeOut'\n}\n\nfunction* waitFadeIn (): luacoro.Iterator<string> {\n  yield 'waitFadeIn'\n}\n\n///////////////////////////////////////////////////////////////////////////\n// Scenario implementations\n\nfunction* inn (): luacoro.Iterator<string> {\n  message('Welcome to the traveler\\'s Inn.')\n  message('Room and board is 6 GOLD per night.')\n  message('Dost thou want a room? (Y/N)')\n  const key = yield waitKey(['y', 'n'])\n\n  if (key === 'y') {\n    message('Good night.')\n    yield waitFrame(30)\n    yield waitFadeOut()\n    yield waitFrame(30)\n    // player.money -= 6\n    // player.hp = player.maxHP\n    // player.mp = player.maxMP\n    yield waitFadeIn()\n    message('Good morning.')\n    message('Thou hast had a good night\\'s sleep I hope.')\n    yield waitKey()\n  }\n\n  message('I shall see thee again.')\n  yield waitKey()\n}\n","import * as basic from './basic'\nimport * as concurrent from './concurrent'\nimport * as recursion from './recursion'\nimport * as inn from './inn'\n\ninterface Demo {\n  start (): void\n  stop (): void\n}\n\nconst examples: {[name: string]: Demo} = {\n  basic,\n  concurrent,\n  recursion,\n  inn\n}\n\nconst buttons = document.getElementById('buttons') as HTMLDivElement\nbuttons.innerHTML = ''\n\nfor (let name in examples) {\n  const button = document.createElement('button') as HTMLButtonElement\n  button.textContent = name\n  buttons.appendChild(button)\n  let currentDemo: Demo = null\n  button.addEventListener('click', function (button: HTMLButtonElement, name: string, demo: Demo, e: Event) {\n    button.blur()\n    const divs = document.getElementsByClassName('example')\n    for (let i = 0; i < divs.length; i++) {\n      divs[i].classList.remove('visible')\n    }\n    document.getElementById(name).classList.add('visible')\n    if (currentDemo) currentDemo.stop()\n    demo.start()\n    currentDemo = demo\n  }.bind(null, button, name, examples[name]))\n}\n"]}